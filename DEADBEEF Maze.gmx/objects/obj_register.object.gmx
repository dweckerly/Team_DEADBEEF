<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>txt = "";
enabled_keys = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
blink = true;
blink_speed = 15;
alarm[0] = blink_speed;

x_offset = 240;
y_offset = 40;

cursor_offset = 24;

x_txt = room_width/2;
y_txt = room_height/2;

max_string_length = 17;

label = "username";
esc_label = "[esc] to go back";

global.username = "";
global.password = "";
c_password = "";
pw_txt = "";

username_entered = false;
password_entered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blink = !blink;
alarm[0] = blink_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_find_value(async_load, "id") == get){
    if (ds_map_find_value(async_load, "status") == 0) {
        r_str = ds_map_find_value(async_load, "result");
        show_debug_message(r_str);
    } else {
        r_str = "null";
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///drawing text
if(os_is_network_connected()){
    shaky_color();
    draw_set_font(fnt_main_small);
    shaky_text(room_width/2, room_height/2 - y_offset - string_height(label), label);
    shaky_text(room_width/2, room_height/2 + y_offset + string_height(esc_label), esc_label);
    draw_set_font(fnt_main);
    draw_roundrect(room_width/2 - x_offset, room_height/2 - y_offset, room_width/2 + x_offset, room_height/2 + y_offset, true);
    if(username_entered){
        draw_text(x, y, pw_txt);
    } else {
        draw_text(x, y, txt);
    }
    
    if(blink){
        var length = string_width(txt);
        var height = string_height(enabled_keys);
        draw_line(x + length - length/2, y - cursor_offset, x + length - length/2, y + height - cursor_offset);
    }
} else {
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(os_is_network_connected()){    
    if(!username_entered){
        global.username = txt;
        username_entered = true;
        txt = "";
        label = "password";
    } else if(username_entered &amp;&amp; !password_entered){
        global.password = txt;
        password_entered = true;
        txt = "";
        pw_txt = "";
        label = "confirm password";
    } else if(username_entered &amp;&amp; password_entered){
        c_password = txt;
        if(global.password == c_password){
            get = http_get("https://teamdeabbeef.000webhostapp.com/create_user.php?user_name=" + global.username + "&amp;password=" + global.password);
            room_goto(rm_1);
        } else {
            show_message("password mismatch");
        }
    }
} else {
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(string_length(txt) &lt; max_string_length){
    if(string_count(chr(keyboard_key), enabled_keys) &amp;&amp; string_length(chr(keyboard_key)) == 1){
        blink = true;
        alarm[0] = blink_speed;
        switch(keyboard_lastchar){
            case "#" :
                txt += "\#"
                break;
            case vk_backspace:
                txt = string_copy(txt, 0, string_length(txt) - 1);
                if(username_entered){
                    pw_txt = string_copy(pw_txt, 0, string_length(pw_txt) - 1);    
                }
                break;
            default:
                txt += keyboard_lastchar;
                if(username_entered){
                    pw_txt += "*";  
                }
                break;
        }
    }
}
if(keyboard_check_pressed(vk_backspace)){
    if(string_char_at(txt, string_length(txt)) == "#"){
       txt = string_copy(txt, 0, string_length(txt) - 2); 
    } else {  
        txt = string_copy(txt, 0, string_length(txt) - 1);
    }
    pw_txt = string_copy(pw_txt, 0, string_length(pw_txt) - 1);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
