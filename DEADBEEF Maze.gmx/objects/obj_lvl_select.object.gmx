<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///instantiations
build_string = "";
build_team = ""
team_name = "Team DEADBEEF";
game_name = "Dungeon Crawl";
new_game = "Register";
log_in = "Log in";

new = "New Game";
load = "Load Replay";

building = true;
team = false;
build_speed = 15;
i = 1;
alarm[0] = build_speed;

select = false;

draw_set_halign(fa_center);
draw_set_valign(fa_center);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(build_team == team_name){
    team = false;
}


if(team){
    build_team += string_copy(team_name, i, 1);
    i++;
    alarm[1] = build_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///build the title name
if(build_string == game_name){
    building = false;
    i = 1;
    team = true;
    build_speed = 5;
    alarm[1] = build_speed;
}

if(building){
    build_string += string_copy(game_name, i, 1); 
    i++;   
    alarm[0] = build_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///intro anim
draw_set_font(fnt_block);
draw_set_color(c_fuchsia);
shaky_text(room_width/2, string_height(game_name), build_string);
shaky_color();
shaky_text(room_width/2, string_height(game_name), build_string);

//check for network connection
if(os_is_network_connected()){
    draw_set_font(fnt_main);
    if(!select){
        if(global.new){
            draw_set_color(c_ltgray);
            draw_text(room_width/2 + 2, 
                    room_height/2 - string_height(new_game)/2 + 2, 
                    new_game);
            shaky_color();
            shaky_text(room_width/2, room_height/2, new_game + "#" + log_in);
        } else if(!global.new){
        draw_set_color(c_ltgray);
            draw_text(room_width/2 + 2, 
                    room_height/2 + string_height(log_in)/2 + 2, 
                    log_in);
            shaky_color();
            shaky_text(room_width/2, room_height/2, new_game + "#" + log_in);
        }
    
        if((keyboard_check_released(vk_up) || keyboard_check_released(vk_down))){
            global.new = !global.new
            show_debug_message(string(global.new));
        }
    }
    
    if(keyboard_check_pressed(vk_enter) &amp;&amp; !select){
        if(global.new){
            build_string = game_name;
            build_team = team_name;
            select = true;
            instance_create(room_width/2, room_height/2, obj_register);
        } else {
            build_string = game_name;
            build_team = team_name;
            select = true;
            instance_create(room_width/2, room_height/2, obj_login);
        }
    }
} else {
//TODO make different screen with 'New Game' or 'Load' if has ini file
    draw_set_font(fnt_main);
    if(!select){
        if(file_exists("save/save" + '.tdb')){
            if(global.new){
                draw_set_color(c_ltgray);
                draw_text(room_width/2 + 2, 
                        room_height/2 - string_height(new)/2 + 2, 
                        new);
                shaky_color();
                shaky_text(room_width/2, room_height/2, new + "#" + load);
            } else if(!global.new){
            draw_set_color(c_ltgray);
                draw_text(room_width/2 + 2, 
                        room_height/2 + string_height(load)/2 + 2, 
                        load);
                shaky_color();
                shaky_text(room_width/2, room_height/2, new + "#" + load);
            }
        
            if((keyboard_check_released(vk_up) || keyboard_check_released(vk_down))){
                global.new = !global.new
                show_debug_message(string(global.new));
            } 
        
            if(keyboard_check_pressed(vk_enter) &amp;&amp; !select){
                if(global.new){
                    build_string = game_name;
                    build_team = team_name;
                    select = true;
                    room_goto(rm_1);
                } else {
                    build_string = game_name;
                    build_team = team_name;
                    select = true;
                    room_goto(rm_2);
                }
            }
        } else {
            draw_set_color(c_ltgray);
            draw_text(room_width/2 + 2, room_height/2 + 2, new);
            shaky_color();
            shaky_text(room_width/2, room_height/2, new);
            if(keyboard_check_pressed(vk_enter)){
                build_string = game_name;
                build_team = team_name;
                select = true;
                room_goto(rm_1);
            }
        }
    }
}
draw_set_font(fnt_DB);
draw_set_color(c_white);
shaky_text(room_width/2, room_height - string_height(team_name), build_team);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
