<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///read file and parse information

savef = file_text_open_read("save/save" + '.tdb');
seed = file_text_read_string(savef);
file_text_readln(savef);
commands = file_text_read_string(savef);
file_text_close(savef);

j = 0;
k = 0;
play = true

for(var i = 1; i &lt; string_length(commands); i++){
    if(string_char_at(commands, i) == "1"){
        switch(string_char_at(commands, i + 1)){
            case ("1"):
                replay[j] = "GO LEFT " + string_char_at(commands, i + 2);
                j++;
                break;
            case ("2"):
                replay[j] = "GO RIGHT " + string_char_at(commands, i + 2);
                j++;
                break;
            case("3"):
                replay[j] = "GO UP " + string_char_at(commands, i + 2);
                j++;
                break;
            case("4"):
                replay[j] = "GO DOWN " + string_char_at(commands, i + 2);
                j++;
                break;
            default:
                break;
        }
        i += 3;
    } else if(string_char_at(commands, i) == "2"){
        replay[j] = "GRAB KEY";
        j++;
    } else if(string_char_at(commands, i) == "3"){
        replay[j] = "OPEN DOOR";
        j++;
    } else if (string_char_at(commands, i) == "4"){
        replay[j] = "USE KEY";
        j++;
    } else if(string_char_at(commands, i) == "5"){
        replay[j] = "USE " + string(obj_chest.combo);
        j++;
    } else if(string_char_at(commands, i) == "6"){
        replay[j] = "USE MARKER";
        j++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>play = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(play){ 
   if(k &lt; j) {
        //TODO: track player x and y positions
        replay_decipher(replay[k]);
        play = false;
        if(string_char_at(replay[k], 2) == "O"){
            if(global.fast){
                alarm[0] = (room_speed * real(string_char_at(replay[k], string_length(replay[k]))))/2;
            } else if(global.slow){
                alarm[0] = room_speed * real(string_char_at(replay[k], string_length(replay[k]))) * 2;
            } else {
                alarm[0] = room_speed * real(string_char_at(replay[k], string_length(replay[k])));
            }
        } else {
            alarm[0] = 10;
        }
        k++;
    }
}

if(!global.moving){
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
